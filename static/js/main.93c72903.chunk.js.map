{"version":3,"sources":["images/card_back.png","Header.js","Filters.js","CardListItem.js","CardList.js","utils.js","CardDetail.js","Options.js","Footer.js","index.js"],"names":["module","exports","Header","Row","className","Col","React","Component","Filters","props","handleSetChange","bind","handleFilterTextChange","handleColorSelect","console","log","onColorSelect","e","this","onSetChange","target","value","onFilterTextChange","id","checked","selectedColors","filterText","Form","Group","controlId","Label","Control","as","onChange","Check","label","has","inline","type","placeholder","CardListItem","handleCardSelect","ReactGA","event","category","action","card","name","onCardSelect","selectedCard","ListGroup","Item","active","onClick","xs","grade","CardList","state","set","Set","setState","color","add","values","delete","filteredCards","cards","filter","start","colorFilter","toLowerCase","startsWith","Fragment","map","key","cardColors","split","setA","setB","_intersection","elem","intersection","size","CardDetail","stop","autoplay","options","url","link","replace","src","card_back","style","margin","title","width","height","frameBorder","allow","allowFullScreen","Options","handleAutoplayChange","onOptionsChange","Footer","App","initialize","pageview","window","location","pathname","search","handleOptionChange","Container","fluid","md","lg","cards_iko","cards_m20","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93c72903.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card_back.7c96c896.png\";","import React from 'react';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Row className=\"header\">\n        <Col>\n          <h1>MTG Draft Helper</h1>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\n\nclass Filters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSetChange = this.handleSetChange.bind(this);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleColorSelect = this.handleColorSelect.bind(this);\n    console.log(props.onColorSelect);\n  }\n\n  handleSetChange(e) {\n    this.props.onSetChange(e.target.value);\n  }\n\n  handleFilterTextChange(e) {\n    this.props.onFilterTextChange(e.target.value);\n  }\n\n  handleColorSelect(e) {\n    this.props.onColorSelect(e.target.id, e.target.checked);\n  }\n\n  render() {\n    const selectedColors = this.props.selectedColors;\n    const filterText = this.props.filterText;\n\n    return (\n      <Form>\n        <Form.Group controlId=\"set\">\n          <Form.Label>Set</Form.Label>\n          <Form.Control as=\"select\" onChange={this.handleSetChange}>\n            <option value=\"IKO\">Ikoria</option>\n            <option value=\"M20\">Core Set 2020</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Color</Form.Label><br/>\n          <Form.Check label=\"White\" id=\"W\" checked={selectedColors.has(\"W\")} onChange={this.handleColorSelect} inline/>\n          <Form.Check label=\"Blue\" id=\"U\" checked={selectedColors.has(\"U\")} onChange={this.handleColorSelect} inline/>\n          <Form.Check label=\"Black\" id=\"B\" checked={selectedColors.has(\"B\")} onChange={this.handleColorSelect} inline/>\n          <Form.Check label=\"Red\" id=\"R\" checked={selectedColors.has(\"R\")} onChange={this.handleColorSelect} inline/>\n          <Form.Check label=\"Green\" id=\"G\" checked={selectedColors.has(\"G\")} onChange={this.handleColorSelect} inline/>\n        </Form.Group>\n        <Form.Group controlId=\"cardName\">\n          <Form.Label>Filter</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Card Name...\" value={filterText} onChange={this.handleFilterTextChange}>\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nexport default Filters;","import React from 'react';\nimport ReactGA from 'react-ga';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass CardListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCardSelect = this.handleCardSelect.bind(this);\n  }\n\n  handleCardSelect(e) {\n    ReactGA.event({\n      category: 'Card List',\n      action: 'Clicked Card',\n      label: this.props.card.name\n    }, 'UA-164496702-1');\n    this.props.onCardSelect(this.props.card);\n  }\n\n  render() {\n    const card = this.props.card;\n    const selectedCard = this.props.selectedCard;\n\n    return (\n      <ListGroup.Item active={selectedCard !== null && selectedCard.name === card.name}\n                      onClick={this.handleCardSelect}>\n        <Row>\n          <Col xs={9}>{card.name}</Col>\n          <Col xs={3}>{card.grade}</Col>\n        </Row>\n      </ListGroup.Item>\n    )\n  }\n}\n\nexport default CardListItem;","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './index.css';\nimport Filters from './Filters';\nimport CardListItem from './CardListItem'\nimport { intersection } from './utils'\n\n\nclass CardList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      set: \"IKO\",\n      selectedColors: new Set(['W', 'U', 'B', 'R', 'G', '']) ,\n      filterText: ''\n    };\n\n    this.handleSetChange = this.handleSetChange.bind(this);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleColorSelect = this.handleColorSelect.bind(this);\n  }\n\n  handleSetChange(set) {\n    this.setState({\n      set: set\n    });\n  }\n\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n\n  handleColorSelect(color, checked) {\n    if (checked) {\n      this.state.selectedColors.add(color);\n      this.setState({\n        selectedColors: new Set(this.state.selectedColors.values())\n      });\n    }\n    else {\n      this.state.selectedColors.delete(color);\n      this.setState({\n        selectedColors: new Set(this.state.selectedColors.values())\n      });\n    }\n  }\n\n  static colorFilter(selectedColors, card) {\n    const cardColors = new Set(card.color.split(''));\n    if (card.color === '') {\n      return true;\n    }\n    return intersection(selectedColors, cardColors).size > 0;\n  }\n\n  render() {\n    const cards = this.props.cards[this.state.set];\n    const noIncompleteCards = cards.filter(card => card.start !== 0);\n    const filterByColor = noIncompleteCards.filter(card => CardList.colorFilter(this.state.selectedColors, card));\n    const filteredCards = filterByColor.filter(card => card.name.toLowerCase().startsWith(this.state.filterText.toLowerCase()));\n    const selectedCard = this.props.selectedCard;\n    const onCardSelect = this.props.onCardSelect;\n    console.log('handleColorSelect', this.handleColorSelect);\n\n    return (\n      <React.Fragment>\n        <Filters selectedColors={this.state.selectedColors}\n                 filterText={this.state.filterText}\n                 onSetChange={this.handleSetChange}\n                 onFilterTextChange={this.handleFilterTextChange}\n                 onColorSelect={this.handleColorSelect}/>\n        <ListGroup>\n          {filteredCards.map(card => (\n            <CardListItem card={card}\n                          key={card.name}\n                          onCardSelect={onCardSelect}\n                          selectedCard={selectedCard}/>\n          ))}\n        </ListGroup>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CardList;","\nfunction intersection(setA, setB) {\n    let _intersection = new Set()\n    for (let elem of setB) {\n        if (setA.has(elem)) {\n            _intersection.add(elem)\n        }\n    }\n    return _intersection\n}\n\nexport {intersection};","import React from 'react';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport card_back from './images/card_back.png'\n\nclass CardDetail extends React.Component {\n  render() {\n    const selectedCard = this.props.selectedCard;\n    const start = selectedCard && selectedCard.start;\n    const stop = selectedCard && selectedCard.stop;\n    const autoplay = this.props.options.autoplay ? 1 : 0;\n    const url = selectedCard && selectedCard.link.split('&')[0].replace('/watch?v=', '/embed/');\n    const src = `${url}?start=${start}&end=${stop}&autoplay=${autoplay}`;\n\n    return (\n      selectedCard === null ?\n        <Row>\n          <Col xs={12}>\n            <h2>Select a Card to Hear the Conversation</h2>\n            <img src={card_back} style={{margin: \"50px\"}}/>\n          </Col>\n        </Row>\n        :\n        <Row>\n          <Col xs={12}>\n            <h2>The Conversation</h2>\n            <div className=\"video\">\n              <iframe title={selectedCard.name}\n                      width=\"100%\" height=\"auto\" src={src}\n                      frameBorder=\"0\"\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen></iframe>\n            </div>\n          </Col>\n        </Row>\n    )\n  }\n}\n\nexport default CardDetail;\n\n","import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport ReactGA from \"react-ga\";\n\nclass Options extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAutoplayChange = this.handleAutoplayChange.bind(this);\n  }\n\n  handleAutoplayChange(e) {\n    ReactGA.event({\n      category: 'Options Change',\n      action: 'Autoplay',\n      label: e.target.checked ? 'on' : 'off'\n    });\n    this.props.onOptionsChange({autoplay: e.target.checked})\n  }\n\n  render() {\n    const options = this.props.options;\n\n    return (\n      <Form>\n        <Form.Group controlId=\"autoplay\">\n          <Form.Check type=\"checkbox\" label=\"Autoplay Videos\" checked={options.autoplay} onChange={this.handleAutoplayChange} inline/>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nexport default Options;","import React from 'react';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <Row className=\"header\">\n        <Col>\n          Problems? Questions? email me: dustin rasener at gmail\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './index.css';\nimport Header from './Header';\nimport CardList from './CardList';\nimport CardDetail from \"./CardDetail\";\nimport Options from \"./Options\";\nimport Footer from \"./Footer\";\nimport cards_iko from \"./data/IKO.json\";\nimport cards_m20 from \"./data/M20.json\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedCard: null, options: {autoplay: false}};\n\n    ReactGA.initialize('UA-164496702-1');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    this.handleCardSelect = this.handleCardSelect.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n  }\n\n  handleCardSelect(card) {\n    this.setState({\n      selectedCard: card\n    });\n  }\n\n  handleOptionChange(options) {\n    this.setState({\n      options: options\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Container fluid>\n          <Header />\n          <Row>\n            <Col xs={12} md={6} lg={3}>\n              <Options options={this.state.options}\n                       onOptionsChange={this.handleOptionChange}/>\n              <CardList cards={{\n                          \"IKO\": cards_iko,\n                          \"M20\": cards_m20\n                        }}\n                        selectedCard={this.state.selectedCard}\n                        onCardSelect={this.handleCardSelect}/>\n            </Col>\n            <Col xs={12} md={6} lg={9}>\n              <CardDetail options={this.state.options}\n                          selectedCard={this.state.selectedCard}/>\n            </Col>\n          </Row>\n          <Footer/>\n        </Container>\n      </div>\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}