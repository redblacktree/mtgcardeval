{"version":3,"sources":["images/card_back.png","images/call_to_action.svg","CardImage.js","Filters.js","CardListItem.js","CardList.js","utils.js","CardDetail.js","Footer.js","Options.js","Header.js","Search.js","ControlPanel.js","index.js"],"names":["module","exports","CardImage","selectedCard","this","props","undefined","src","card_back","className","image_url","React","Component","Filters","handleSetChange","bind","handleColorSelect","e","onSetChange","target","value","onColorSelect","id","checked","selectedColors","filterText","Form","Group","controlId","Label","Control","as","onChange","selected","Check","label","has","inline","CardListItem","handleCardSelect","ReactGA","event","category","action","card","name","onCardSelect","options","ListGroup","Item","active","onClick","Row","Col","xs","grade","gradeDisplay","CardList","filteredCards","cards","filter","clips","colorFilter","toLowerCase","indexOf","map","key","cardColors","Set","color","split","setA","setB","_intersection","elem","add","intersection","size","CardDetail","state","onPlayerReady","onPlayerStateChange","handleChangeClip","setState","console","log","start","stop","videoId","startSeconds","endSeconds","player","loadVideoById","playerReady","data","length","clipIndex","getCurrentTime","prevProps","prevState","snapshot","playbackRate","setPlaybackRate","window","YouTubeIframeAPIReady","YT","Player","width","height","events","Fragment","call_to_action","md","lg","xl","ToggleButtonGroup","type","clip","ToggleButton","showNames","Footer","href","Options","handlePlaybackRateChange","handleGradeDisplayChange","onOptionsChange","Search","handleFilterTextChange","onFilterTextChange","placeholder","ControlPanel","values","delete","App","set","cards_iko","cards_m20","cards_m21","cards_znr","cards_khm","cards_stx","cards_afr","cards_mid","cards_vow","cards_neo","initialize","pageview","location","pathname","search","handleOptionChange","metadata","show_names","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.360c8849.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card_back.7c96c896.png\";","module.exports = __webpack_public_path__ + \"static/media/call_to_action.d6361fa7.svg\";","import React from 'react';\r\nimport './index.css';\r\nimport card_back from './images/card_back.png';\r\n\r\nclass CardImage extends React.Component {\r\n  render() {\r\n    const selectedCard = this.props.selectedCard;\r\n\r\n    return (\r\n      selectedCard === undefined || selectedCard === null ?\r\n        <img src={card_back} className=\"card-image\"/>\r\n        :\r\n        <img src={selectedCard.image_url} className=\"card-image\" />\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardImage;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass Filters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSetChange = this.handleSetChange.bind(this);\r\n    this.handleColorSelect = this.handleColorSelect.bind(this);\r\n  }\r\n\r\n  handleSetChange(e) {\r\n    this.props.onSetChange(e.target.value);\r\n  }\r\n\r\n  handleColorSelect(e) {\r\n    this.props.onColorSelect(e.target.id, e.target.checked);\r\n  }\r\n\r\n  render() {\r\n    const selectedColors = this.props.selectedColors;\r\n    const filterText = this.props.filterText;\r\n\r\n    return (\r\n      <div className=\"panel panel-default\">\r\n        <Form className=\"panel-body\">\r\n          <h4>Filters</h4>\r\n          <Form.Group controlId=\"set\">\r\n            <Form.Label>Set</Form.Label>\r\n            <Form.Control as=\"select\" onChange={this.handleSetChange}>\r\n              <option value=\"NEO\" selected={\"selected\"}>Kamigawa: Neon Dynasty</option>\r\n              <option value=\"VOW\">Innistrad: Crimson Vow</option>\r\n              <option value=\"MID\">Innistrad Midnight Hunt</option>\r\n              <option value=\"AFR\">Adventures in the Forgotten Realms</option>\r\n              <option value=\"STX\">Strixhaven</option>\r\n              <option value=\"KHM\">Kaldheim</option>\r\n              <option value=\"ZNR\">Zendikar Rising</option>\r\n              <option value=\"M21\">Core Set 2021</option>\r\n              <option value=\"IKO\">Ikoria</option>\r\n              <option value=\"M20\">Core Set 2020</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Color</Form.Label><br/>\r\n            <Form.Check label=\"White\" id=\"W\" checked={selectedColors.has(\"W\")} onChange={this.handleColorSelect} inline/>\r\n            <Form.Check label=\"Blue\" id=\"U\" checked={selectedColors.has(\"U\")} onChange={this.handleColorSelect} inline/>\r\n            <Form.Check label=\"Black\" id=\"B\" checked={selectedColors.has(\"B\")} onChange={this.handleColorSelect} inline/>\r\n            <Form.Check label=\"Red\" id=\"R\" checked={selectedColors.has(\"R\")} onChange={this.handleColorSelect} inline/>\r\n            <Form.Check label=\"Green\" id=\"G\" checked={selectedColors.has(\"G\")} onChange={this.handleColorSelect} inline/>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport './index.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass CardListItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCardSelect = this.handleCardSelect.bind(this);\r\n  }\r\n\r\n  handleCardSelect(e) {\r\n    ReactGA.event({\r\n      category: 'Card List',\r\n      action: 'Clicked Card',\r\n      label: this.props.card.name\r\n    }, 'UA-164496702-1');\r\n    this.props.onCardSelect(this.props.card);\r\n  }\r\n\r\n  render() {\r\n    const card = this.props.card;\r\n    const selectedCard = this.props.selectedCard;\r\n    const options = this.props.options;\r\n\r\n    return (\r\n      <ListGroup.Item active={selectedCard !== null && selectedCard.name === card.name}\r\n                      onClick={this.handleCardSelect}>\r\n        <Row>\r\n          <Col xs={9}>{card.name}</Col>\r\n          <Col xs={3}>{card.grade[options.gradeDisplay] ? card.grade[options.gradeDisplay] : \"--\"}</Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardListItem;","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport './index.css';\r\nimport Filters from './Filters';\r\nimport CardListItem from './CardListItem'\r\nimport { intersection } from './utils'\r\n\r\n\r\nclass CardList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static colorFilter(selectedColors, card) {\r\n    const cardColors = new Set(card.color.split(''));\r\n    if (card.color === '') {\r\n      return true;\r\n    }\r\n    return intersection(selectedColors, cardColors).size > 0;\r\n  }\r\n\r\n  render() {\r\n    const cards = this.props.cards;\r\n    const noIncompleteCards = cards.filter(card => card.clips !== undefined);\r\n    const filterByColor = noIncompleteCards.filter(card => CardList.colorFilter(this.props.selectedColors, card));\r\n    const filteredCards = filterByColor.filter(card => card.name.toLowerCase().indexOf(this.props.filterText.toLowerCase()) >= 0);\r\n\r\n    return (\r\n      <ListGroup>\r\n        {filteredCards.map(card => (\r\n          <CardListItem card={card}\r\n                        key={card.name}\r\n                        options={this.props.options}\r\n                        onCardSelect={this.props.onCardSelect}\r\n                        selectedCard={this.props.selectedCard}/>\r\n        ))}\r\n      </ListGroup>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardList;","\r\nfunction intersection(setA, setB) {\r\n    let _intersection = new Set()\r\n    for (let elem of setB) {\r\n        if (setA.has(elem)) {\r\n            _intersection.add(elem)\r\n        }\r\n    }\r\n    return _intersection\r\n}\r\n\r\nexport {intersection};","import React from 'react';\r\nimport './index.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport card_back from './images/card_back.png'\r\nimport CardImage from \"./CardImage\";\r\nimport {ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport CardListItem from \"./CardList\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport call_to_action from \"./images/call_to_action.svg\"\r\n\r\nclass CardDetail extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {'clipIndex': 0};\r\n\r\n    this.onPlayerReady = this.onPlayerReady.bind(this);\r\n    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\r\n    this.handleChangeClip = this.handleChangeClip.bind(this);\r\n  }\r\n\r\n  handleChangeClip(value) {\r\n    this.setState({'clipIndex': value})\r\n  }\r\n\r\n  onPlayerReady(event) {\r\n    console.log('onPlayerReady');\r\n    const selectedCard = this.props.selectedCard;\r\n\r\n    if (selectedCard) {\r\n      const start = selectedCard.clips[0].start;\r\n      const stop = selectedCard.clips[0].stop;\r\n      const videoId = selectedCard.clips[0].videoId;\r\n\r\n      const options = {\r\n        videoId: videoId,\r\n        startSeconds: start,\r\n        endSeconds: stop\r\n      };\r\n      this.player.loadVideoById(options);\r\n    }\r\n\r\n    this.playerReady = true;\r\n  }\r\n\r\n  onPlayerStateChange(event) {\r\n    const state = event.data;\r\n    const player = event.target;\r\n\r\n    if (state === 0) { // state 0 == ENDED\r\n      const selectedCard = this.props.selectedCard;\r\n      if (selectedCard\r\n          && selectedCard.clips.length > this.state.clipIndex + 1\r\n          // The comparison below is somewhat loose, because YouTube returns a\r\n          // floating point number, and I'm not confident that it will always be\r\n          // greater than the defined stop time when an ENDED event is fired\r\n          && player.getCurrentTime() > selectedCard.clips[this.state.clipIndex].stop - 1) {\r\n        this.setState({clipIndex: this.state.clipIndex + 1});\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    console.log('componentDidUpdate');\r\n    console.log(this.player);\r\n\r\n    const selectedCard = this.props.selectedCard;\r\n    let clipIndex = this.state.clipIndex;\r\n    // Reset clipIndex to 0 when the card changes\r\n    if (prevProps.selectedCard !== this.props.selectedCard) {\r\n      clipIndex = 0;\r\n      this.setState({'clipIndex': 0});\r\n    }\r\n    const start = selectedCard && selectedCard.clips[clipIndex].start;\r\n    const stop = selectedCard && selectedCard.clips[clipIndex].stop;\r\n    const videoId = selectedCard && selectedCard.clips[clipIndex].videoId;\r\n\r\n    if (this.playerReady\r\n        && prevProps.options.playbackRate !== this.props.options.playbackRate) {\r\n      this.player.setPlaybackRate(this.props.options.playbackRate);\r\n    }\r\n\r\n    if (this.playerReady\r\n        && (prevProps.selectedCard !== this.props.selectedCard\r\n            || prevProps.clipIndex !== this.state.clipIndex))\r\n    {\r\n      const options = {\r\n        videoId:videoId,\r\n        startSeconds:start,\r\n        endSeconds:stop\r\n      };\r\n      this.player.loadVideoById(options);\r\n    }\r\n\r\n    if (window.YouTubeIframeAPIReady && this.player === undefined) {\r\n      console.log('initializing player');\r\n      this.player = new window.YT.Player('player', {\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        videoId: \"w0nzu-99Bs8\",\r\n        events: {\r\n          'onReady': this.onPlayerReady,\r\n          'onStateChange': this.onPlayerStateChange\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const selectedCard = this.props.selectedCard;\r\n\r\n    return (\r\n       <React.Fragment>\r\n        <Row className={selectedCard !== null ? \"hidden\": \"\"}>\r\n          <div>\r\n            <CardImage selectedCard={selectedCard} />\r\n          </div>\r\n          <div className=\"hero\">\r\n            <h3>Pro Opinions.</h3>\r\n            <h3>Fast Enough for Human Draft.</h3>\r\n            <h3>Click a card name to get started.</h3>\r\n            <img className=\"call-to-action\" src={call_to_action} />\r\n          </div>\r\n        </Row>\r\n\r\n        <Row className={selectedCard === null ? \"hidden\": \"\"}>\r\n          <Col xs={12} md={6} lg={4} xl={4}>\r\n            <CardImage selectedCard={selectedCard} />\r\n          </Col>\r\n          <Col xs={12} md={6} lg={6} xl={6} className=\"video-container\">\r\n            <div className=\"mentions\">\r\n              <Form>\r\n                <Form.Group>\r\n                  <ToggleButtonGroup type=\"radio\" name=\"clipIndex\" value={this.state.clipIndex}\r\n                                     onChange={this.handleChangeClip} className=\"btn-group-justified\">\r\n                    {selectedCard && selectedCard.clips.map(clip => (\r\n                      <ToggleButton key={selectedCard.clips.indexOf(clip)}\r\n                                    value={selectedCard.clips.indexOf(clip)}>\r\n                        {this.props.showNames[clip.videoId]}\r\n                      </ToggleButton>\r\n                    ))}\r\n                  </ToggleButtonGroup>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n            <div className=\"video\">\r\n              <div id=\"player\"></div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n       </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardDetail;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"header\">\r\n        <Col>\r\n          <p>MTG Draft Helper is unofficial Fan Content permitted under the Fan Content Policy. Not approved/endorsed by Wizards. Portions of the materials used are property of Wizards of the Coast. ©Wizards of the Coast LLC.</p>\r\n          <a href=\"https://github.com/redblacktree/mtgcardeval/issues\">Report issues</a>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './index.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ReactGA from \"react-ga\";\r\nimport {ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\n\r\nclass Options extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handlePlaybackRateChange = this.handlePlaybackRateChange.bind(this);\r\n    this.handleGradeDisplayChange = this.handleGradeDisplayChange.bind(this);\r\n  }\r\n\r\n  handlePlaybackRateChange(value) {\r\n    this.props.onOptionsChange({playbackRate: value, gradeDisplay: this.props.options.gradeDisplay});\r\n  }\r\n\r\n  handleGradeDisplayChange(value) {\r\n    this.props.onOptionsChange({playbackRate: this.props.options.playbackRate, gradeDisplay: value})\r\n  }\r\n\r\n  render() {\r\n    const options = this.props.options;\r\n\r\n    return (\r\n      <div className=\"panel panel-default options\">\r\n        <Form className=\"panel-body\">\r\n          <h4>Options</h4>\r\n          <Form.Group controlId=\"playbackRate\">\r\n            <Form.Label>Playback Speed</Form.Label><br/>\r\n            <ToggleButtonGroup type=\"radio\" name=\"playbackRate\" value={options.playbackRate}\r\n                               onChange={this.handlePlaybackRateChange}>\r\n              <ToggleButton value={1}>Normal</ToggleButton>\r\n              <ToggleButton value={1.25}>1.25x</ToggleButton>\r\n              <ToggleButton value={1.5}>1.5x</ToggleButton>\r\n              <ToggleButton value={1.75}>1.75x</ToggleButton>\r\n              <ToggleButton value={2}>2x</ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <br/>\r\n            <Form.Label>Grades</Form.Label><br/>\r\n            <ToggleButtonGroup type=\"radio\" name=\"gradeDisplay\" value={options.gradeDisplay}\r\n                               onChange={this.handleGradeDisplayChange}>\r\n              <ToggleButton value={\"LR\"}>Limited Resources</ToggleButton>\r\n              <ToggleButton value={\"NZ\"}>Nizzahon</ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Options;","import React from 'react';\r\nimport './index.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"header\">\r\n        <Col>\r\n          <h1>MTG Draft Helper</h1>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './index.css';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n  }\r\n\r\n  handleFilterTextChange(e) {\r\n    this.props.onFilterTextChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const filterText = this.props.filterText;\r\n\r\n    return (\r\n      <Form className=\"search-box\">\r\n        <Form.Group controlId=\"cardName\">\r\n          <Form.Label>Search</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Card Name...\" value={filterText} onChange={this.handleFilterTextChange}>\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './index.css';\r\nimport Header from './Header';\r\nimport CardList from './CardList';\r\nimport CardDetail from \"./CardDetail\";\r\nimport Options from \"./Options\";\r\nimport Footer from \"./Footer\";\r\nimport cards_iko from \"./data/IKO.json\";\r\nimport cards_m20 from \"./data/M20.json\";\r\nimport Filters from \"./Filters\";\r\nimport Search from \"./Search\";\r\n\r\nclass ControlPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedColors: new Set(['W', 'U', 'B', 'R', 'G', '']) ,\r\n      filterText: ''\r\n    };\r\n\r\n    this.handleColorSelect = this.handleColorSelect.bind(this);\r\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n  }\r\n\r\n  handleColorSelect(color, checked) {\r\n    if (checked) {\r\n      this.state.selectedColors.add(color);\r\n      this.setState({\r\n        selectedColors: new Set(this.state.selectedColors.values())\r\n      });\r\n    }\r\n    else {\r\n      this.state.selectedColors.delete(color);\r\n      this.setState({\r\n        selectedColors: new Set(this.state.selectedColors.values())\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFilterTextChange(filterText) {\r\n    this.setState({\r\n      filterText: filterText\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col xs={12} md={6} lg={4} xl={4}>\r\n          <Search onFilterTextChange={this.handleFilterTextChange}/>\r\n          <CardList cards={this.props.cards}\r\n                    selectedColors={this.state.selectedColors}\r\n                    options={this.props.options}\r\n                    filterText={this.state.filterText}\r\n                    selectedCard={this.props.selectedCard}\r\n                    onCardSelect={this.props.onCardSelect}/>\r\n        </Col>\r\n        <Col xs={12} md={6} lg={4} xl={4}>\r\n          <Options options={this.props.options}\r\n                   onOptionsChange={this.props.onOptionsChange}/>\r\n\r\n          <Filters onSetChange={this.props.onSetChange}\r\n                   onColorSelect={this.handleColorSelect}\r\n                   selectedColors={this.state.selectedColors}/>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './index.css';\r\nimport CardDetail from \"./CardDetail\";\r\nimport Footer from \"./Footer\";\r\nimport cards_iko from \"./data/IKO.json\";\r\nimport cards_m20 from \"./data/M20.json\";\r\nimport cards_m21 from \"./data/M21.json\";\r\nimport cards_znr from \"./data/ZNR.json\";\r\nimport cards_khm from \"./data/KHM.json\";\r\nimport cards_stx from \"./data/STX.json\";\r\nimport cards_afr from \"./data/AFR.json\";\r\nimport cards_mid from \"./data/MID.json\";\r\nimport cards_vow from \"./data/VOW.json\";\r\nimport cards_neo from \"./data/NEO.json\";\r\nimport ControlPanel from \"./ControlPanel\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {set: \"NEO\", selectedCard: null, options: {playbackRate: 1, gradeDisplay: \"LR\"}};\r\n    this.data = {\r\n      \"IKO\": cards_iko,\r\n      \"M20\": cards_m20,\r\n      \"M21\": cards_m21,\r\n      \"ZNR\": cards_znr,\r\n      \"KHM\": cards_khm,\r\n      \"STX\": cards_stx,\r\n      \"AFR\": cards_afr,\r\n      \"MID\": cards_mid,\r\n      \"VOW\": cards_vow,\r\n      \"NEO\": cards_neo\r\n    };\r\n\r\n    ReactGA.initialize('UA-164496702-1');\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\n    this.handleSetChange = this.handleSetChange.bind(this);\r\n    this.handleCardSelect = this.handleCardSelect.bind(this);\r\n    this.handleOptionChange = this.handleOptionChange.bind(this);\r\n  }\r\n\r\n  handleSetChange(set) {\r\n    this.setState({\r\n      set: set\r\n    });\r\n  }\r\n\r\n  handleCardSelect(card) {\r\n    this.setState({\r\n      selectedCard: card\r\n    });\r\n  }\r\n\r\n  handleOptionChange(options) {\r\n    this.setState({\r\n      options: options\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const cards = this.data[this.state.set].cards;\r\n    const showNames = this.data[this.state.set].metadata.show_names;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h1>MTG Draft Helper</h1>\r\n              <CardDetail options={this.state.options}\r\n                          selectedCard={this.state.selectedCard}\r\n                          showNames={showNames}/>\r\n            </Col>\r\n          </Row>\r\n          <Row className={\"border-top\"}>\r\n            <Col xs={12}>\r\n              <ControlPanel options={this.state.options}\r\n                            onOptionsChange={this.handleOptionChange}\r\n                            onSetChange={this.handleSetChange}\r\n                            cards={cards}\r\n                            selectedCard={this.state.selectedCard}\r\n                            onCardSelect={this.handleCardSelect}/>\r\n            </Col>\r\n          </Row>\r\n          <Footer/>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}