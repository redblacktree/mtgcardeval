{"version":3,"sources":["images/card_back.png","images/call_to_action.svg","Header.js","Filters.js","CardListItem.js","CardList.js","utils.js","CardImage.js","CardDetail.js","Options.js","Footer.js","Search.js","ControlPanel.js","index.js"],"names":["module","exports","React","Component","Filters","props","handleSetChange","bind","handleColorSelect","e","this","onSetChange","target","value","onColorSelect","id","checked","selectedColors","filterText","className","Form","Group","controlId","Label","Control","as","onChange","Check","label","has","inline","CardListItem","handleCardSelect","ReactGA","event","category","action","card","name","onCardSelect","selectedCard","ListGroup","Item","active","onClick","Row","Col","xs","grade","CardList","filteredCards","cards","filter","start","colorFilter","toLowerCase","startsWith","map","key","cardColors","Set","color","split","setA","setB","_intersection","elem","add","intersection","size","CardImage","undefined","src","card_back","image_url","CardDetail","state","onPlayerReady","onPlayerStateChange","handleChangeClip","setState","console","log","clips","stop","options","videoId","startSeconds","endSeconds","player","loadVideoById","playerReady","data","length","clipIndex","getCurrentTime","prevProps","prevState","snapshot","playbackRate","setPlaybackRate","window","YouTubeIframeAPIReady","YT","Player","width","height","events","Fragment","call_to_action","md","lg","xl","ToggleButtonGroup","type","clip","ToggleButton","indexOf","showNames","Options","handlePlaybackRateChange","onOptionsChange","Footer","href","Search","handleFilterTextChange","onFilterTextChange","placeholder","ControlPanel","values","delete","App","set","cards_iko","cards_m20","initialize","pageview","location","pathname","search","handleOptionChange","metadata","show_names","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1568437d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card_back.7c96c896.png\";","module.exports = __webpack_public_path__ + \"static/media/call_to_action.d0c4a449.svg\";","import React from 'react';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Row className=\"header\">\n        <Col>\n          <h1>MTG Draft Helper</h1>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\n\nclass Filters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSetChange = this.handleSetChange.bind(this);\n    this.handleColorSelect = this.handleColorSelect.bind(this);\n  }\n\n  handleSetChange(e) {\n    this.props.onSetChange(e.target.value);\n  }\n\n  handleColorSelect(e) {\n    this.props.onColorSelect(e.target.id, e.target.checked);\n  }\n\n  render() {\n    const selectedColors = this.props.selectedColors;\n    const filterText = this.props.filterText;\n\n    return (\n      <div className=\"panel panel-default\">\n        <Form className=\"panel-body\">\n          <h4>Filters</h4>\n          <Form.Group controlId=\"set\">\n            <Form.Label>Set</Form.Label>\n            <Form.Control as=\"select\" onChange={this.handleSetChange}>\n              <option value=\"IKO\">Ikoria</option>\n              <option value=\"M20\">Core Set 2020</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Color</Form.Label><br/>\n            <Form.Check label=\"White\" id=\"W\" checked={selectedColors.has(\"W\")} onChange={this.handleColorSelect} inline/>\n            <Form.Check label=\"Blue\" id=\"U\" checked={selectedColors.has(\"U\")} onChange={this.handleColorSelect} inline/>\n            <Form.Check label=\"Black\" id=\"B\" checked={selectedColors.has(\"B\")} onChange={this.handleColorSelect} inline/>\n            <Form.Check label=\"Red\" id=\"R\" checked={selectedColors.has(\"R\")} onChange={this.handleColorSelect} inline/>\n            <Form.Check label=\"Green\" id=\"G\" checked={selectedColors.has(\"G\")} onChange={this.handleColorSelect} inline/>\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Filters;","import React from 'react';\nimport ReactGA from 'react-ga';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass CardListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCardSelect = this.handleCardSelect.bind(this);\n  }\n\n  handleCardSelect(e) {\n    ReactGA.event({\n      category: 'Card List',\n      action: 'Clicked Card',\n      label: this.props.card.name\n    }, 'UA-164496702-1');\n    this.props.onCardSelect(this.props.card);\n  }\n\n  render() {\n    const card = this.props.card;\n    const selectedCard = this.props.selectedCard;\n\n    return (\n      <ListGroup.Item active={selectedCard !== null && selectedCard.name === card.name}\n                      onClick={this.handleCardSelect}>\n        <Row>\n          <Col xs={9}>{card.name}</Col>\n          <Col xs={3}>{card.grade}</Col>\n        </Row>\n      </ListGroup.Item>\n    )\n  }\n}\n\nexport default CardListItem;","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './index.css';\nimport Filters from './Filters';\nimport CardListItem from './CardListItem'\nimport { intersection } from './utils'\n\n\nclass CardList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static colorFilter(selectedColors, card) {\n    const cardColors = new Set(card.color.split(''));\n    if (card.color === '') {\n      return true;\n    }\n    return intersection(selectedColors, cardColors).size > 0;\n  }\n\n  render() {\n    const cards = this.props.cards;\n    const noIncompleteCards = cards.filter(card => card.start !== 0);\n    const filterByColor = noIncompleteCards.filter(card => CardList.colorFilter(this.props.selectedColors, card));\n    const filteredCards = filterByColor.filter(card => card.name.toLowerCase().startsWith(this.props.filterText.toLowerCase()));\n\n    return (\n      <ListGroup>\n        {filteredCards.map(card => (\n          <CardListItem card={card}\n                        key={card.name}\n                        onCardSelect={this.props.onCardSelect}\n                        selectedCard={this.props.selectedCard}/>\n        ))}\n      </ListGroup>\n    )\n  }\n}\n\nexport default CardList;","\nfunction intersection(setA, setB) {\n    let _intersection = new Set()\n    for (let elem of setB) {\n        if (setA.has(elem)) {\n            _intersection.add(elem)\n        }\n    }\n    return _intersection\n}\n\nexport {intersection};","import React from 'react';\nimport './index.css';\nimport card_back from './images/card_back.png';\n\nclass CardImage extends React.Component {\n  render() {\n    const selectedCard = this.props.selectedCard;\n\n    return (\n      selectedCard === undefined || selectedCard === null ?\n        <img src={card_back} className=\"card-image\"/>\n        :\n        <img src={selectedCard.image_url} className=\"card-image\" />\n    )\n  }\n}\n\nexport default CardImage;\n\n","import React from 'react';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport card_back from './images/card_back.png'\nimport CardImage from \"./CardImage\";\nimport {ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\nimport CardListItem from \"./CardList\";\nimport Form from \"react-bootstrap/Form\";\nimport call_to_action from \"./images/call_to_action.svg\"\n\nclass CardDetail extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {'clipIndex': 0};\n\n    this.onPlayerReady = this.onPlayerReady.bind(this);\n    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\n    this.handleChangeClip = this.handleChangeClip.bind(this);\n  }\n\n  handleChangeClip(value) {\n    this.setState({'clipIndex': value})\n  }\n\n  onPlayerReady(event) {\n    console.log('onPlayerReady');\n    const selectedCard = this.props.selectedCard;\n\n    if (selectedCard) {\n      const start = selectedCard.clips[0].start;\n      const stop = selectedCard.clips[0].stop;\n      const videoId = selectedCard.clips[0].videoId;\n\n      const options = {\n        videoId: videoId,\n        startSeconds: start,\n        endSeconds: stop\n      };\n      this.player.loadVideoById(options);\n    }\n\n    this.playerReady = true;\n  }\n\n  onPlayerStateChange(event) {\n    const state = event.data;\n    const player = event.target;\n\n    if (state === 0) { // state 0 == ENDED\n      const selectedCard = this.props.selectedCard;\n      if (selectedCard\n          && selectedCard.clips.length > this.state.clipIndex + 1\n          // The comparison below is somewhat loose, because YouTube returns a\n          // floating point number, and I'm not confident that it will always be\n          // greater than the defined stop time when an ENDED event is fired\n          && player.getCurrentTime() > selectedCard.clips[this.state.clipIndex].stop - 1) {\n        this.setState({clipIndex: this.state.clipIndex + 1});\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('componentDidUpdate');\n    console.log(this.player);\n\n    const selectedCard = this.props.selectedCard;\n    let clipIndex = this.state.clipIndex;\n    // Reset clipIndex to 0 when the card changes\n    if (prevProps.selectedCard !== this.props.selectedCard) {\n      clipIndex = 0;\n      this.setState({'clipIndex': 0});\n    }\n    const start = selectedCard && selectedCard.clips[clipIndex].start;\n    const stop = selectedCard && selectedCard.clips[clipIndex].stop;\n    const videoId = selectedCard && selectedCard.clips[clipIndex].videoId;\n\n    if (this.playerReady\n        && prevProps.options.playbackRate !== this.props.options.playbackRate) {\n      this.player.setPlaybackRate(this.props.options.playbackRate);\n    }\n\n    if (this.playerReady\n        && (prevProps.selectedCard !== this.props.selectedCard\n            || prevProps.clipIndex !== this.state.clipIndex))\n    {\n      const options = {\n        videoId:videoId,\n        startSeconds:start,\n        endSeconds:stop\n      };\n      this.player.loadVideoById(options);\n    }\n\n    if (window.YouTubeIframeAPIReady && this.player === undefined) {\n      console.log('initializing player');\n      this.player = new window.YT.Player('player', {\n        width: \"100%\",\n        height: \"auto\",\n        videoId: \"w0nzu-99Bs8\",\n        events: {\n          'onReady': this.onPlayerReady,\n          'onStateChange': this.onPlayerStateChange\n        }\n      });\n    }\n  };\n\n  render() {\n    const selectedCard = this.props.selectedCard;\n\n    return (\n       <React.Fragment>\n        <Row className={selectedCard !== null ? \"hidden\": \"\"}>\n          <div>\n            <CardImage selectedCard={selectedCard} />\n          </div>\n          <div className=\"hero\">\n            <h3>Pro Opinions.</h3>\n            <h3>Fast Enough for Human Draft.</h3>\n            <h3>Click a card name to get started.</h3>\n            <img className=\"call-to-action\" src={call_to_action} />\n          </div>\n        </Row>\n\n        <Row className={selectedCard === null ? \"hidden\": \"\"}>\n          <Col xs={12} md={6} lg={4} xl={4}>\n            <CardImage selectedCard={selectedCard} />\n          </Col>\n          <Col xs={12} md={6} lg={6} xl={6} className=\"video-container\">\n            <div className=\"mentions\">\n              <Form>\n                <Form.Group>\n                  <ToggleButtonGroup type=\"radio\" name=\"clipIndex\" value={this.state.clipIndex}\n                                     onChange={this.handleChangeClip} className=\"btn-group-justified\">\n                    {selectedCard && selectedCard.clips.map(clip => (\n                      <ToggleButton key={selectedCard.clips.indexOf(clip)}\n                                    value={selectedCard.clips.indexOf(clip)}>\n                        {this.props.showNames[clip.videoId]}\n                      </ToggleButton>\n                    ))}\n                  </ToggleButtonGroup>\n                </Form.Group>\n              </Form>\n            </div>\n            <div className=\"video\">\n              <div id=\"player\"></div>\n            </div>\n          </Col>\n        </Row>\n       </React.Fragment>\n    )\n  }\n}\n\nexport default CardDetail;\n\n","import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport ReactGA from \"react-ga\";\nimport {ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\n\nclass Options extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlaybackRateChange = this.handlePlaybackRateChange.bind(this);\n  }\n\n  handlePlaybackRateChange(value) {\n    this.props.onOptionsChange({playbackRate: value});\n  }\n\n  render() {\n    const options = this.props.options;\n\n    return (\n      <div className=\"panel panel-default options\">\n        <Form className=\"panel-body\">\n          <h4>Options</h4>\n          <Form.Group controlId=\"playbackRate\">\n            <Form.Label>Playback Speed</Form.Label><br/>\n            <ToggleButtonGroup type=\"radio\" name=\"playbackRate\" value={options.playbackRate}\n                               onChange={this.handlePlaybackRateChange}>\n              <ToggleButton value={1}>Normal</ToggleButton>\n              <ToggleButton value={1.25}>1.25x</ToggleButton>\n              <ToggleButton value={1.5}>1.5x</ToggleButton>\n              <ToggleButton value={1.75}>1.75x</ToggleButton>\n              <ToggleButton value={2}>2x</ToggleButton>\n            </ToggleButtonGroup>\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Options;","import React from 'react';\nimport './index.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <Row className=\"header\">\n        <Col>\n          <p>MTG Draft Helper is unofficial Fan Content permitted under the Fan Content Policy. Not approved/endorsed by Wizards. Portions of the materials used are property of Wizards of the Coast. ©Wizards of the Coast LLC.</p>\n          <a href=\"https://github.com/redblacktree/mtgcardeval/issues\">Report issues</a>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n  }\n\n  handleFilterTextChange(e) {\n    this.props.onFilterTextChange(e.target.value);\n  }\n\n  render() {\n    const filterText = this.props.filterText;\n\n    return (\n      <Form className=\"search-box\">\n        <Form.Group controlId=\"cardName\">\n          <Form.Label>Search</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Card Name...\" value={filterText} onChange={this.handleFilterTextChange}>\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nexport default Search;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './index.css';\nimport Header from './Header';\nimport CardList from './CardList';\nimport CardDetail from \"./CardDetail\";\nimport Options from \"./Options\";\nimport Footer from \"./Footer\";\nimport cards_iko from \"./data/IKO.json\";\nimport cards_m20 from \"./data/M20.json\";\nimport Filters from \"./Filters\";\nimport Search from \"./Search\";\n\nclass ControlPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColors: new Set(['W', 'U', 'B', 'R', 'G', '']) ,\n      filterText: ''\n    };\n\n    this.handleColorSelect = this.handleColorSelect.bind(this);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n  }\n\n  handleColorSelect(color, checked) {\n    if (checked) {\n      this.state.selectedColors.add(color);\n      this.setState({\n        selectedColors: new Set(this.state.selectedColors.values())\n      });\n    }\n    else {\n      this.state.selectedColors.delete(color);\n      this.setState({\n        selectedColors: new Set(this.state.selectedColors.values())\n      });\n    }\n  }\n\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col xs={12} md={6} lg={4} xl={4}>\n          <Search onFilterTextChange={this.handleFilterTextChange}/>\n          <CardList cards={this.props.cards}\n                    selectedColors={this.state.selectedColors}\n                    filterText={this.state.filterText}\n                    selectedCard={this.props.selectedCard}\n                    onCardSelect={this.props.onCardSelect}/>\n        </Col>\n        <Col xs={12} md={6} lg={4} xl={4}>\n          <Options options={this.props.options}\n                   onOptionsChange={this.props.onOptionsChange}/>\n\n          <Filters onSetChange={this.props.onSetChange}\n                   onColorSelect={this.handleColorSelect}\n                   selectedColors={this.state.selectedColors}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './index.css';\nimport Header from './Header';\nimport CardList from './CardList';\nimport CardDetail from \"./CardDetail\";\nimport Options from \"./Options\";\nimport Footer from \"./Footer\";\nimport cards_iko from \"./data/IKO.json\";\nimport cards_m20 from \"./data/M20.json\";\nimport ControlPanel from \"./ControlPanel\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {set: \"IKO\", selectedCard: null, options: {playbackRate: 1}};\n    this.data = {\n      \"IKO\": cards_iko,\n      \"M20\": cards_m20\n    };\n\n    ReactGA.initialize('UA-164496702-1');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    this.handleSetChange = this.handleSetChange.bind(this);\n    this.handleCardSelect = this.handleCardSelect.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n  }\n\n  handleSetChange(set) {\n    this.setState({\n      set: set\n    });\n  }\n\n  handleCardSelect(card) {\n    this.setState({\n      selectedCard: card\n    });\n  }\n\n  handleOptionChange(options) {\n    this.setState({\n      options: options\n    });\n  }\n\n  render() {\n    const cards = this.data[this.state.set].cards;\n    const showNames = this.data[this.state.set].metadata.show_names;\n\n    return (\n      <div className=\"app\">\n        <Container fluid>\n          <Row>\n            <Col xs={12}>\n              <h1>MTG Draft Helper</h1>\n              <CardDetail options={this.state.options}\n                          selectedCard={this.state.selectedCard}\n                          showNames={showNames}/>\n            </Col>\n          </Row>\n          <Row className={\"border-top\"}>\n            <Col xs={12}>\n              <ControlPanel options={this.state.options}\n                            onOptionsChange={this.handleOptionChange}\n                            onSetChange={this.handleSetChange}\n                            cards={cards}\n                            selectedCard={this.state.selectedCard}\n                            onCardSelect={this.handleCardSelect}/>\n            </Col>\n          </Row>\n          <Footer/>\n        </Container>\n      </div>\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}